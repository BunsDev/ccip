name: Load CCIP Tests
on:
  schedule:
    - cron: "0 1,13 * * *"
  workflow_dispatch:


# Only run 1 of this workflow at a time per PR
concurrency:
  group: load-ccip-tests-chainlink-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - name: Build Image
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/build-image@02c9ae5ec7f88250088bab88f14b4b043162b46d # 2.0.18
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          cl_repo: smartcontractkit/chainlink-ccip
          cl_ref: ${{ github.sha }}
          push_tag: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:latest.${{ github.sha }}
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}

  ccip-load-tests:
    environment: integration
    permissions:
      issues: read
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: ccip-load-tests
    runs-on: ubuntu-latest
    needs: [build-chainlink]
    env:
      CHAINLINK_COMMIT_SHA: ${{ github.sha }}
      CHAINLINK_ENV_USER: ${{ github.actor }}
      TEST_TRIGGERED_BY: ccip-cron-load-eth
      TEST_LOG_LEVEL: debug
      KEEP_ENVIRONMENTS: ONFAIL
      DATABASE_URL: postgresql://postgres:node@localhost:5432/chainlink_test?sslmode=disable
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: CCIP Load Test
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@02c9ae5ec7f88250088bab88f14b4b043162b46d # v2.0.18
        with:
          test_command_to_run: make test_load_ccip
          test_download_vendor_packages_command: make gomod
          cl_repo: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.${{ github.sha }}
          artifacts_location: ./integration-tests/load/logs
          publish_check_name: CCIP Load Test Results
          publish_report_paths: ./integration-tests/tests-load-report.xml
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}
          go_mod_path: ./integration-tests/go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          CGO_ENABLED: "1"
      ## TODO change this send-slack with avg stats after the security request gets approved
      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: load-test-stats
          path: ./integration-tests/load/logs/stats

      ## Run Cleanup if the job succeeds
      - name: cleanup
        if: always()
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/cleanup@02c9ae5ec7f88250088bab88f14b4b043162b46d # v2.0.18
        with:
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}

