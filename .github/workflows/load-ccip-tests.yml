name: Load and Chaos CCIP Tests
on:
  push:
    branches:
      - ccip-develop
  schedule:
    - cron: "0 13 * * 3"
  workflow_dispatch:
    inputs:
      chaos-run:
        description: 'Run the chaos tests'
        required: true
        default: false
        type: boolean
      duration:
        description: 'Duration(in minutes) for the load sequence'
        required: true
        default: 4
        type: number
      phase_time_out:
        description: 'Max time(in minutes) to wait for individual events in ccip flow'
        required: true
        default: 15
        type: number
      send_request_per_second:
        description: 'Number of ccip-send requests to trigger per second'
        required: true
        default: 3
        type: number
      type-of-transfer:
        description: 'Type of message to be sent'
        required: true
        default: WithoutToken
        type: choice
        options:
            - WithoutToken
            - WithToken
      slack-notify:
        description: 'Notify Slack channel'
        required: true
        default: false
        type: boolean



# Only run 1 of this workflow at a time per PR
concurrency:
  group: load-ccip-tests-chainlink-${{ github.ref }}
  cancel-in-progress: true

env:
  CL_ECR: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
  ENV_JOB_IMAGE: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink-ccip-tests:ci.${{ github.sha }}

jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu20.04-16cores-64GB
    steps:
      - name: Checkout the repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Build Image
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/build-image@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          cl_repo: smartcontractkit/chainlink-ccip
          cl_ref: ${{ github.sha }}
          push_tag: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:latest.${{ github.sha }}
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      - name: Collect Metrics
        if: always()
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@808c183d1f5c26a4f3fd50b75d3cf7b58d9aa293
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true

  build-test-image:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Test Image
    runs-on: ubuntu20.04-16cores-64GB
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Test Image
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: build test runner
        uses: smartcontractkit/chainlink-github-actions/docker/build-push@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          tags: ${{ env.ENV_JOB_IMAGE }}
          file: ./integration-tests/test.Dockerfile
          build-args: |
            BASE_IMAGE=${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/test-base-image
            IMAGE_VERSION=v0.3.0
            SUITES="load chaos"
          #SUITES="chaos migration performance reorg smoke soak"
          AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}

  ccip-load-tests:
    environment: integration
    permissions:
      issues: read
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: ccip-load-tests
    runs-on: ubuntu-latest
    needs: [ build-chainlink, build-test-image ]
    env:
      SELECTED_NETWORKS: SIMULATED,SIMULATED_1,SIMULATED_2
      CHAINLINK_COMMIT_SHA: ${{ github.sha }}
      CHAINLINK_ENV_USER: ${{ github.actor }}
      TEST_TRIGGERED_BY: ccip-cron-load-eth
      TEST_LOG_LEVEL: debug
      TEST_SUITE: load
      TEST_ARGS: -test.timeout 130m
      DATABASE_URL: postgresql://postgres:node@localhost:5432/chainlink_test?sslmode=disable
      GH_TOKEN: ${{ github.token }}
      LOAD_TEST_DURATION: ${{ inputs.duration }}
      LOAD_TEST_CALLTIMEOUT: ${{ inputs.phase_time_out }}
      LOAD_TEST_TPS: ${{ inputs.send_request_per_second }}
      LOAD_TEST_MSG_TYPE: ${{ inputs.type-of-transfer }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: "Set environmental variables"
        run: |
          echo "TEST_GH_RUN_URL=https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" >> $GITHUB_ENV
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          test_command_to_run: make test_need_operator_assets && cd ./integration-tests && go test -v -timeout 130m -count=1 -run ^TestLoadCCIP ./load
          test_download_vendor_packages_command: make gomod
          cl_repo: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.${{ github.sha }}
          artifacts_location: ./integration-tests/load/logs
          publish_check_name: CCIP Load Test Results
          publish_report_paths: ./tests-load-report.xml
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          go_mod_path: ./integration-tests/go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          CGO_ENABLED: "1"
      - name: Publish Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: load-test-stats
          path: ./integration-tests/load/logs/stats
      - name: Slack Notify
        if: ${{ failure() && github.event_name == 'push' || always() && github.event_name == 'schedule' || inputs.slack-notify != false}}
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload-file-path: "./integration-tests/load/logs/payload-slack-content.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      ## Run Cleanup if the job succeeds
      - name: cleanup
        if: always()
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/cleanup@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}
      - name: Collect Metrics
        if: always()
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@808c183d1f5c26a4f3fd50b75d3cf7b58d9aa293
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: CCIP Load Test
        continue-on-error: true

  ccip-chaos-tests:
    environment: integration
    permissions:
      issues: read
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: ccip-chaos-tests
    runs-on: ubuntu-latest
    needs: [ build-chainlink, build-test-image ]
    if: ${{ github.event_name == 'schedule' || inputs.chaos-run != false}}
    env:
      SELECTED_NETWORKS: SIMULATED,SIMULATED_1,SIMULATED_2
      TEST_SUITE: chaos
      TEST_ARGS: -test.timeout 30m
      CHAINLINK_COMMIT_SHA: ${{ github.sha }}
      CHAINLINK_ENV_USER: ${{ github.actor }}
      TEST_TRIGGERED_BY: ccip-cron-chaos-eth
      TEST_LOG_LEVEL: debug
      DATABASE_URL: postgresql://postgres:node@localhost:5432/chainlink_test?sslmode=disable
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: CCIP chaos Test
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          test_command_to_run: make test_need_operator_assets && cd ./integration-tests && go test -timeout 1h -count=1 -json -test.parallel 11 -run 'TestChaosCCIP' ./chaos 2>&1 | tee /tmp/gotest.log | gotestfmt
          test_download_vendor_packages_command: make gomod
          cl_repo: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.${{ github.sha }}
          artifacts_location: ./integration-tests/chaos/logs
          publish_check_name: CCIP Chaos Test Results
          publish_report_paths: ./tests-chaos-report.xml
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          go_mod_path: ./integration-tests/go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
          CGO_ENABLED: "1"

      ## Run Cleanup if the job succeeds
      - name: cleanup
        if: always()
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/cleanup@ce87f8986ca18336cc5015df75916c2ec0a7c4b3 # v2.1.2
        with:
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}