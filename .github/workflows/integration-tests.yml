name: Integration Tests
on:
  pull_request:
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '**/*.go'
              - '**/*go.sum'
              - '**/*go.mod'
  smoke:
    environment: integration
    name: ETH Smoke Tests
    runs-on: ubuntu-latest
    needs: [changes, build-chainlink]
    if: ${{ needs.changes.outputs.src == 'true' }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Tests
        uses: smartcontractkit/ctf-ci-e2e-action@v1.0.2
        with:
          test_command_to_run: make test_smoke args="-nodes=10"
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: 795953128386.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.${{ github.sha }}
          artifacts_location: ./integration-tests/smoke/logs
          QA_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          QA_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          QA_AWS_REGION: ${{ secrets.AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.KUBECONFIG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  solana:
    name: Solana Tests
    needs: [changes, build-chainlink]
    if: ${{ needs.changes.outputs.src == 'true' }}
    uses: smartcontractkit/chainlink-solana/.github/workflows/e2e.yml@develop
    with:
      repo_name: smartcontractkit/chainlink-solana
      ref: develop
      cl_repo: 795953128386.dkr.ecr.us-west-2.amazonaws.com/chainlink
      cl_image: latest.${{ github.sha }}
    secrets:
      QA_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      QA_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      QA_AWS_REGION: ${{ secrets.AWS_REGION }}
      QA_AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      QA_KUBECONFIG: ${{ secrets.KUBECONFIG }}
